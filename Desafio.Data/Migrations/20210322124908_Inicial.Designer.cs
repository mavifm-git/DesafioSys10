// <auto-generated />
using System;
using Desafio.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Desafio.Data.Migrations
{
    [DbContext(typeof(DesafioDbContext))]
    [Migration("20210322124908_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Desafio.Business.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(250)");

                    b.Property<decimal>("Nota")
                        .HasColumnName("Nota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TurmaID")
                        .HasColumnName("TurmaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TurmaID");

                    b.ToTable("Aluno");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 3, 22, 9, 49, 8, 81, DateTimeKind.Local).AddTicks(2609),
                            Nome = "Marcus Vinicius",
                            Nota = 10m,
                            TurmaID = 1
                        });
                });

            modelBuilder.Entity("Desafio.Business.Models.Escola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Escola");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 3, 22, 9, 49, 8, 80, DateTimeKind.Local).AddTicks(9762),
                            Nome = "Pedro II"
                        });
                });

            modelBuilder.Entity("Desafio.Business.Models.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<int>("EscolaID")
                        .HasColumnName("EscolaID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("EscolaID");

                    b.ToTable("Turma");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 3, 22, 9, 49, 8, 81, DateTimeKind.Local).AddTicks(1009),
                            EscolaID = 1,
                            Nome = "101"
                        });
                });

            modelBuilder.Entity("Desafio.Business.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnName("Login")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasColumnName("Perfil")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("Senha")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 3, 22, 9, 49, 8, 78, DateTimeKind.Local).AddTicks(4564),
                            Login = "admin",
                            Nome = "Administrador",
                            Perfil = "Escola",
                            Senha = "1234"
                        });
                });

            modelBuilder.Entity("Desafio.Business.Models.Aluno", b =>
                {
                    b.HasOne("Desafio.Business.Models.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("TurmaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Desafio.Business.Models.Turma", b =>
                {
                    b.HasOne("Desafio.Business.Models.Escola", "Escola")
                        .WithMany("Turmas")
                        .HasForeignKey("EscolaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
